import React, { useState, useEffect } from 'react';
import { Stage, Layer, Rect } from 'react-konva';
import 'tailwindcss/tailwind.css';

const colors = [
  '#FF5733', '#33FF57', '#3357FF', '#FF33A1', '#33FFF5', '#F5FF33', '#FF8C33', '#8C33FF', '#33FF8C', '#FF3333',
  '#33FF33', '#3333FF', '#FF33FF', '#33FFFF', '#FFFF33', '#FF6633', '#6633FF', '#33FF66', '#FF3366', '#3366FF',
  '#66FF33', '#FF9933', '#9933FF', '#33FF99', '#FF3399', '#3399FF', '#99FF33', '#FFCC33', '#CC33FF', '#33FFCC'
];

const App = () => {
  const [selectedColor, setSelectedColor] = useState(colors[0]);
  const [rectangles, setRectangles] = useState([]);
  const [canSetPixel, setCanSetPixel] = useState(true);

  useEffect(() => {
    const timer = setTimeout(() => {
      setCanSetPixel(true);
    }, 3000);

    return () => clearTimeout(timer);
  }, [canSetPixel]);

  const handleCanvasClick = (e) => {
    if (!canSetPixel) return;

    const stage = e.target.getStage();
    const pointerPosition = stage.getPointerPosition();
    setRectangles([
      ...rectangles,
      { x: pointerPosition.x, y: pointerPosition.y, color: selectedColor },
    ]);
    console.log(`Rectangle added at (${pointerPosition.x}, ${pointerPosition.y}) with color ${selectedColor}`);

    setCanSetPixel(false);
  };

  return (
    <div className="flex">
      <div className="w-1/4 p-1 bg-gray-200">
        <div className="text-center mb-2">
          {canSetPixel ? 'You can set a pixel' : 'Please wait...'}
        </div>
        {colors.map((color, index) => (
          <div
            key={index}
            className={`w-2 h-2 m-1 cursor-pointer ${selectedColor === color ? 'border-l-2' : ''}`}
            style={{ backgroundColor: color }}
            onClick={() => {
              setSelectedColor(color);
              console.log(`Color selected: ${color}`);
            }}
          />
        ))}
      </div>
      <div className="w-3/4">
        <Stage
          width={window.innerWidth}
          height={window.innerHeight}
          onClick={handleCanvasClick}
          style={{ border: '5px solid black', cursor: `crosshair` }}
        >
          <Layer>
            {rectangles.map((rect, index) => (
              <Rect
                key={index}
                x={rect.x}
                y={rect.y}
                width={1}
                height={1}
                fill={rect.color}
              />
            ))}
          </Layer>
        </Stage>
      </div>
    </div>
  );
};

export default App;
